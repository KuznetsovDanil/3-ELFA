#include "math/diffur.h"

#include <iostream>
//////////////
//Переменные//
//////////////
/*
  x0, u0 - точка через которую проходит Интеграл ДУ, 
		  так же с этой точки начинает строится график
		  так же при помощи этой точки вы числяется значение константы в Интеграле ДУ
  
  a, b - интервал на котором строится интеграл ДУ и его апроксимация (пользователю удобней задать отрезок, чем количество точек)

  tay - шаг между 2-мя соседними значениями x, которые перебираются при построении

  method - метод вычисления приближенного Интеграла ДУ

  fun - функция f(x,u) = y', сам дифур

  n - количество точек, вычисляется чтобы ибавиться от b

*/
int main() {
	double x0, u0, a, b, tay;
	int method, type;
	x0 = 5;
	u0 = 34;
	a = 0.1;
	b = 10;
	tay = 0.5;
	method = 1;
	type = 1;
	//cout << "Введите координаты точки:\nx0 = ";
	//cin >> x0;
	//cout << "u0 = ";
	//cin >> u0;
	//cout << "Введите отрезок построения Интеграла ДУ:\na = ";
	//cin >> a;
	//cout << "b = ";
	//cin >> b;
	//cout << "Введите шаг построения: ";
	//cin >> tay;
	//cout << "Введите метод вычисления: ";
	//cin >> method;
	//cout << "Введите номер функции: ";
	//cin >> fun;

	Function fun(x0, u0, type, a);

	// Вычислим кол-во точек
	const int n = ceil((b - a) / tay);

	std::cout << fun.get_c();
	system("pause");
	fun.answer_grafic(n, tay); // Строим u(x) - Интеграл ДУ
	diff_methods(fun,n,tay,method); // Строим y(x) - апроксимацию
	return 0;
}